{"noir_version":"0.31.0+540bef3597bd3e5775c83ec2ee3c0d4463084b4c","hash":9038729989175722947,"abi":{"parameters":[{"name":"password","type":{"kind":"string","length":8},"visibility":"private"},{"name":"signature","type":{"kind":"array","length":64,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"},{"name":"pubKeyX","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"pubKeyY","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"public"},{"name":"hashedMsg","type":{"kind":"array","length":32,"type":{"kind":"integer","sign":"unsigned","width":8}},"visibility":"private"}],"return_type":null,"error_types":{}},"bytecode":"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","debug_symbols":"ldVNDoIwEEDhu8yaRcEKM1zFGFMVDQkpRtDEEO9u8WdhdPOW087r5lt0kn2zvRw3bTz0g9SrSbp+F8a2j2maJC/1eTicQpznYQznUeq8KjNp4l7qwts9k0PbNVL76r7OUmI4qdy/pFD/ThbuK8l+Vr3T96r35c/rOXr9mRQ8WfDE82TJk5InFU+UJ4YTdTzh+sr1lesr11eur1xfub5yfeX6xvWN6xvXN65vXN+4vnF94/rG9Q3rF87xJOcJ1E/DNZzbsO2a+cec7y5x9/lA0zjeTq+btPsA","file_map":{"47":{"source":"use std::ecdsa_secp256k1;\n\nfn main(\n    password: str<8>,\n    signature: [u8; 64],\n    pubKeyX: pub [u8; 32],\n    pubKeyY: pub [u8; 32],\n    hashedMsg: [u8; 32]\n) {\n    assert(ecdsa_secp256k1::verify_signature(pubKeyX, pubKeyY, signature, hashedMsg), \"Invalid signature\");\n    assert(verify_password(password), \"Invalid password\");\n}\n\nfn verify_password(password: str<8>) -> bool {\n    let hashed_password = std::hash::sha256(password.as_bytes());\n    let expected_hash = [\n        55, 53, 139, 161, 108, 80, 87, 143,\n        89, 18, 186, 8, 13, 11, 147, 219,\n        134, 172, 94, 208, 232, 78, 48, 137,\n        194, 14, 143, 118, 208, 143, 230, 139\n    ];\n    hashed_password == expected_hash\n}\n\n#[test]\nfn test_main() {\n    let password = \"xxxxxxxx\";\n    let hashed_password = std::hash::sha256(password.as_bytes());\n    std::println(hashed_password);\n    assert(verify_password(password));\n}\n","path":"/Users/ajs/zeronaut/packages/campaigns/hello-zeronaut/circuits/one/src/main.nr"}},"names":["main"]}